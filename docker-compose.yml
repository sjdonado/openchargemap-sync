version: '3'
services:
  mongo1:
    image: mongo:5
    container_name: mongo1
    restart: always
    command: ["--bind_ip_all", "--port", "27017", "--replSet", "rs0"]
    # volumes:
    #   - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
    ports:
      - 27017:27017
    links:
      - mongo2
    networks:
      - mongo-cluster
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo1:27017'},{_id:1,host:'mongo2:27018'}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
      interval: 10s
      start_period: 20s
    depends_on:
        - mongo2
  mongo2:
    image: mongo:5
    container_name: mongo2
    restart: always
    command: ["--bind_ip_all", "--port", "27018", "--replSet", "rs0"]
    ports:
      - 27018:27018
    networks:
      - mongo-cluster
  redis:
    image: redis:latest
    ports:
      - 6379:6379
  rabbitmq:
    image: rabbitmq:management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

networks:
  mongo-cluster:
    driver: bridge
